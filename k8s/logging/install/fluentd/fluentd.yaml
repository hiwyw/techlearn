#Fluentd RBAC
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd-es
  namespace: logging 
  labels:
    k8s-app: fluentd-es
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd-es
  labels:
    k8s-app: fluentd-es
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
rules:
- apiGroups:
  - ""
  resources:
  - "namespaces"
  - "pods"
  verbs:
  - "get"
  - "watch"
  - "list"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd-es
  labels:
    k8s-app: fluentd-es
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
subjects:
- kind: ServiceAccount
  name: fluentd-es
  namespace: logging 
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: fluentd-es
  apiGroup: ""
---
#Fluentd DaemonSet
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd-es-v2.2.0
  namespace: logging 
  labels:
    k8s-app: fluentd-es
    version: v2.2.0
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  selector:
    matchLabels:
      k8s-app: fluentd-es
      version: v2.2.0
  template:
    metadata:
      labels:
        k8s-app: fluentd-es
        kubernetes.io/cluster-service: "true"
        version: v2.2.0
      # This annotation ensures that fluentd does not get evicted if the node
      # supports critical pod annotation based priority scheme.
      # Note that this does not guarantee admission on the nodes (#40573).
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
    spec:
      serviceAccountName: fluentd-es
      containers:
      - name: fluentd-es
        image: bikecn81/fluentd-elasticsearch:v2.2.0
        env:
        - name: FLUENTD_ARGS
          value: --no-supervisor -q
        resources:
          limits:
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: config-volume
          mountPath: /etc/fluent/config.d
        - name: config-template
          mountPath: /etc/fluent/template.d
      nodeSelector:
        beta.kubernetes.io/fluentd-ds-ready: "true"
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: config-volume
        configMap:
          name: fluentd-es-config-v0.1.5
      - name: config-template
        configMap:
          name: fluentd-template-conf
---
#Fluentd ConfigMap
kind: ConfigMap
apiVersion: v1
metadata:
  name: fluentd-es-config-v0.1.5
  namespace: logging
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
data:
  system.conf: |-
    <system>
      root_dir /tmp/fluentd-buffers/
    </system>

  containers.input.conf: |-
    <source>
      @id fluentd-containers.log
      @type tail
      path /var/log/containers/*.log
      pos_file /var/log/es-containers.log.pos
      tag kubernetes.*
      read_from_head true
      <parse>
        @type json
        time_key time
        time_format %Y-%m-%dT%H:%M:%S.%NZ
      </parse>
    </source>

  output.conf: |-
    # Enriches records with Kubernetes metadata
    <filter kubernetes.**>
      @type kubernetes_metadata
    </filter>

    #Enriches records with query domain name
    <filter kubernetes.**>
      @type record_transformer
      enable_ruby true
      <record>
        domain_name ${record["log"].split[7]}
      </record>
    </filter>

    <match **>
      @id elasticsearch
      @type elasticsearch
      @log_level info
      type_name _doc 
      include_tag_key true
      host elasticsearch-logging
      port 9200
      logstash_format true
      template_name my_template
      template_file /etc/fluent/template.d/fluentd-template.json
      <buffer>
        @type file
        path /var/log/fluentd-buffers/kubernetes.system.buffer
        flush_mode interval
        retry_type exponential_backoff
        flush_thread_count 2
        flush_interval 5s
        retry_forever
        retry_max_interval 30
        chunk_limit_size 2M
        queue_limit_length 8
        overflow_action block
      </buffer>
    </match>
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: fluentd-template-conf
  namespace: logging
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
data:
  fluentd-template.json: ' { "mappings": { "_doc": { "_source": { "excludes": [ "docker", "stream", "kubernetes.labels", "kubernetes.container_image_id", "kubernetes.container_image", "kubernetes.pod_id", "kubernetes.namespace_id", "kubernetes.master_url", "kubernetes.namespace_labels"]}, "properties": { "docker": { "enabled": false }, "stream": { "type": "text", "index": false }, "log": { "type": "text", "norms": false, "index_options": "freqs", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } } }, "tag": { "type": "text", "norms": false, "index_options": "freqs", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } } }, "kubernetes": { "properties": { "container_image": { "type": "text", "index": false }, "container_image_id": { "type": "text", "index": false }, "container_name": {"type": "text", "norms": false, "index_options": "freqs", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } }  }, "host": { "type": "text", "norms": false, "index_options": "freqs", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } } }, "labels": {"enabled": false }, "master_url" : { "type": "text", "index": false }, "namespace_id": { "type": "text", "index": false }, "namespace_labels": { "enabled": false }, "namespace_name": {"type": "text", "norms": false, "index_options": "freqs", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } } }, "pod_id": { "type": "text", "index": false }, "pod_name": { "type": "text", "norms": false, "index_options": "freqs", "fields": { "keyword": { "type": "keyword", "ignore_above": 256 } } } } } } } }, "settings": { "index.refresh_interval": "5s", "index.number_of_shards": "5" }, "template": "logstash-*" } '
